<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://arend-lang.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://arend-lang.github.io/" rel="alternate" type="text/html" /><updated>2020-10-15T09:08:24+08:00</updated><id>https://arend-lang.github.io/feed.xml</id><title type="html">Arend Theorem Prover</title><subtitle>The Arend Theorem Prover</subtitle><entry><title type="html">Arend 1.5.0 released</title><link href="https://arend-lang.github.io/2020/10/10/Arend-1.5.0-released.html" rel="alternate" type="text/html" title="Arend 1.5.0 released" /><published>2020-10-10T00:00:00+08:00</published><updated>2020-10-10T00:00:00+08:00</updated><id>https://arend-lang.github.io/2020/10/10/Arend-1.5.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2020/10/10/Arend-1.5.0-released.html">&lt;p&gt;Language updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;String literals, which can be used in meta code&lt;/li&gt;
  &lt;li&gt;Meta resolvers, which can be used to modify the scoping rules for meta definitions&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/documentation/language-reference/definitions/parameters#strict-parameters&quot;&gt;\strict parameters&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improved performance&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/documentation/language-reference/definitions/metas&quot;&gt;Defined metas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Libraries can be loaded from zip archives without unpacking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugin updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Completion of not-imported definitions&lt;/li&gt;
  &lt;li&gt;Rainbow highlighting&lt;/li&gt;
  &lt;li&gt;arend-lib can be downloaded and upgraded from the IDE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Arend console, which can be used to print information in the IDE instead of stdout&lt;/li&gt;
  &lt;li&gt;Clauses and coclauses can be passed to metas now&lt;/li&gt;
  &lt;li&gt;Saving and loading of typechecker state&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;arend-lib:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Debug metas (&lt;span class=&quot;inl-highlight&quot;&gt;println&lt;/span&gt;, &lt;span class=&quot;inl-highlight&quot;&gt;random&lt;/span&gt;, &lt;span class=&quot;inl-highlight&quot;&gt;time&lt;/span&gt;)&lt;/li&gt;
  &lt;li&gt;Congruence closure &lt;span class=&quot;inl-highlight&quot;&gt;cong&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Insertion and tree sort functions&lt;/li&gt;
  &lt;li&gt;Meta &lt;span class=&quot;inl-highlight&quot;&gt;mcases&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Language updates: String literals, which can be used in meta code Meta resolvers, which can be used to modify the scoping rules for meta definitions \strict parameters Improved performance Defined metas Libraries can be loaded from zip archives without unpacking</summary></entry><entry><title type="html">Arend 1.4.0 released</title><link href="https://arend-lang.github.io/2020/06/29/Arend-1.4.0-released.html" rel="alternate" type="text/html" title="Arend 1.4.0 released" /><published>2020-06-29T00:00:00+08:00</published><updated>2020-06-29T00:00:00+08:00</updated><id>https://arend-lang.github.io/2020/06/29/Arend-1.4.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2020/06/29/Arend-1.4.0-released.html">&lt;p&gt;Language updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/documentation/language-reference/expressions/pi#implicit-lambdas&quot;&gt;Implicit lambdas&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/documentation/libraries&quot;&gt;Tests directory&lt;/a&gt; can be used to store files with tests, examples, and other code which is not a part of the library.&lt;/li&gt;
  &lt;li&gt;Improved pretty printer: if some definition is not available in the current context, it will be replaced with its full name.&lt;/li&gt;
  &lt;li&gt;REPL. To run it, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt; flag.&lt;/li&gt;
  &lt;li&gt;Arend now supports unicode symbols through &lt;a href=&quot;/documentation/language-reference/definitions#aliases&quot;&gt;aliases&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Equality between disjoint constructors is now considered empty.&lt;/li&gt;
  &lt;li&gt;Added support for incomplete lambdas, let expressions, and tuples. Missing expressions are treated as goals.&lt;/li&gt;
  &lt;li&gt;Implemented tail call optimization.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugin updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Highlighting and resolving of expressions in error messages.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#goals&quot;&gt;Fill goal and refine&lt;/a&gt; intentions can be invoked on goals. The latter is implemented through language extensions.&lt;/li&gt;
  &lt;li&gt;REPL can be invoked from the main menu: &lt;strong&gt;Tools | Show Arend REPL&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#aliases&quot;&gt;Aliases support&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Improved goto next/previous error. By default, these actions can be invoked by shortcuts &lt;strong&gt;Alt+F2&lt;/strong&gt; and &lt;strong&gt;Alt+Shift+F2&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;To debug meta definitions, you need to specify a path to Arend jar file in the settings on page &lt;strong&gt;Language &amp;amp; Frameworks | Arend&lt;/strong&gt;.
To run the debugger, click on the gutter icon near some Arend definition and choose “Debug ‘Typecheck …’”.&lt;/li&gt;
  &lt;li&gt;Improved &lt;a href=&quot;/about/intellij-features#quick-documentation&quot;&gt;documentation support&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Goal solvers can be used to replace goals with expressions.&lt;/li&gt;
  &lt;li&gt;Arend UI allows meta definitions to interact with the user.&lt;/li&gt;
  &lt;li&gt;Level solvers can be used to automatically prove that a type belongs to a certain homotopy level.&lt;/li&gt;
  &lt;li&gt;Number type-checker can be used to elaborate numerical literals to arbitrary expressions.&lt;/li&gt;
  &lt;li&gt;User data in definitions can be used to store arbitrary user data.&lt;/li&gt;
  &lt;li&gt;User data in ContextData can be used to pass information between meta definitions.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Language updates: Implicit lambdas. Tests directory can be used to store files with tests, examples, and other code which is not a part of the library. Improved pretty printer: if some definition is not available in the current context, it will be replaced with its full name. REPL. To run it, use -i flag. Arend now supports unicode symbols through aliases. Equality between disjoint constructors is now considered empty. Added support for incomplete lambdas, let expressions, and tuples. Missing expressions are treated as goals. Implemented tail call optimization.</summary></entry><entry><title type="html">Tutorial Part II</title><link href="https://arend-lang.github.io/2020/06/14/tutorial-part-II.html" rel="alternate" type="text/html" title="Tutorial Part II" /><published>2020-06-14T00:00:00+08:00</published><updated>2020-06-14T00:00:00+08:00</updated><id>https://arend-lang.github.io/2020/06/14/tutorial-part-II</id><content type="html" xml:base="https://arend-lang.github.io/2020/06/14/tutorial-part-II.html">&lt;p&gt;The &lt;a href=&quot;/documentation/tutorial/PartII&quot;&gt;second part&lt;/a&gt; of our tutorial is ready.&lt;/p&gt;</content><author><name></name></author><summary type="html">The second part of our tutorial is ready.</summary></entry><entry><title type="html">Arend 1.3.0 released</title><link href="https://arend-lang.github.io/2020/04/13/Arend-1.3.0-released.html" rel="alternate" type="text/html" title="Arend 1.3.0 released" /><published>2020-04-13T00:00:00+08:00</published><updated>2020-04-13T00:00:00+08:00</updated><id>https://arend-lang.github.io/2020/04/13/Arend-1.3.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2020/04/13/Arend-1.3.0-released.html">&lt;p&gt;We implemented language extensions.
This can be used to implement custom operations on the abstract syntax tree which are not supported by the language.
They can also be used to implement various decision procedures for proof automation.&lt;/p&gt;

&lt;p&gt;Language updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implemented &lt;a href=&quot;/about/arend-features#language-extensions&quot;&gt;language extensions&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Arend now shows conditions in goals which makes it easier to write functions over higher inductive types.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugin updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implemented “&lt;a href=&quot;/about/intellij-features#show-types&quot;&gt;show type&lt;/a&gt;” feature.&lt;/li&gt;
  &lt;li&gt;Implemented “&lt;a href=&quot;/about/intellij-features#show-expr&quot;&gt;show (normalized) expression&lt;/a&gt;” feature.
This can be used to see inferred implicit arguments or the result of invocation of some function.&lt;/li&gt;
  &lt;li&gt;Implemented “&lt;a href=&quot;/about/intellij-features#normalize-expr&quot;&gt;replace (sub)expression&lt;/a&gt;” feature.
This can be used to replace an expression with its normalized result.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">We implemented language extensions. This can be used to implement custom operations on the abstract syntax tree which are not supported by the language. They can also be used to implement various decision procedures for proof automation.</summary></entry><entry><title type="html">The first part of our tutorial is ready</title><link href="https://arend-lang.github.io/2020/01/17/tutorial-part-I.html" rel="alternate" type="text/html" title="The first part of our tutorial is ready" /><published>2020-01-17T00:00:00+08:00</published><updated>2020-01-17T00:00:00+08:00</updated><id>https://arend-lang.github.io/2020/01/17/tutorial-part-I</id><content type="html" xml:base="https://arend-lang.github.io/2020/01/17/tutorial-part-I.html">&lt;p&gt;We finished the first part of our new &lt;a href=&quot;/documentation/tutorial&quot;&gt;tutorial&lt;/a&gt;.
It covers all the basic constructions of Arend.
It does not mention anything related to homotopy theory.
This will be the topic of the second part.&lt;/p&gt;</content><author><name></name></author><summary type="html">We finished the first part of our new tutorial. It covers all the basic constructions of Arend. It does not mention anything related to homotopy theory. This will be the topic of the second part.</summary></entry><entry><title type="html">Arend 1.2.0 released</title><link href="https://arend-lang.github.io/2019/12/16/Arend-1.2.0-released.html" rel="alternate" type="text/html" title="Arend 1.2.0 released" /><published>2019-12-16T00:00:00+08:00</published><updated>2019-12-16T00:00:00+08:00</updated><id>https://arend-lang.github.io/2019/12/16/Arend-1.2.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2019/12/16/Arend-1.2.0-released.html">&lt;p&gt;We implemented a few features related to classes and pattern matching.
One of these features is pattern matching on &lt;span class=&quot;inl-highlight&quot;&gt;idp &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; a &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; a&lt;/span&gt;, which can be used instead of the J operator.&lt;/p&gt;

&lt;p&gt;Language updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implemented pattern matching on &lt;a href=&quot;/documentation/language-reference/prelude#idp&quot;&gt;idp&lt;/a&gt;.
This feature can be used instead of the J operator to define functions on path types.
This is a standard feature in other proof assistants, but was missing from Arend since it has a different definition of path types.&lt;/li&gt;
  &lt;li&gt;New keyword &lt;a href=&quot;/documentation/language-reference/definitions/classes#classifying-fields&quot;&gt;\noclassifying&lt;/a&gt; can be used to define classes without classifying fields.
Such classes are similar to Agda’s modules and Coq’s sections.&lt;/li&gt;
  &lt;li&gt;The type of a field can be overridden with a subtype in a subclass using new keyword &lt;a href=&quot;/documentation/language-reference/definitions/records#override&quot;&gt;\override&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Variables can be &lt;a href=&quot;/documentation/language-reference/expressions/case#elim-in-case&quot;&gt;eliminated&lt;/a&gt; in &lt;span class=&quot;inl-highlight&quot;&gt;&lt;span class=&quot;k&quot;&gt;\case&lt;/span&gt;&lt;/span&gt; expressions now.&lt;/li&gt;
  &lt;li&gt;Implemented &lt;a href=&quot;/documentation/language-reference/definitions/data#constructor-synonyms&quot;&gt;constructor synonyms&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;It is possible now to implement fields using &lt;a href=&quot;/documentation/language-reference/definitions/functions#patterns-in-coclauses&quot;&gt;pattern matching&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;We decided to make &lt;a href=&quot;/documentation/language-reference/expressions/universes&quot;&gt;\Prop&lt;/a&gt; proof relevant in general (but it is still proof irrelevant in some cases).
The implementation in 1.1.0 was incorrect and it turns out that it is &lt;a href=&quot;https://arxiv.org/abs/1911.08174v1&quot;&gt;impossible&lt;/a&gt; to implement it without loss of the normalization property.&lt;/li&gt;
  &lt;li&gt;Now, fields and implementations in a class are typechecked in the order they are specified (before now implementations were typechecked after fields).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugin updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fixed some problems with pattern generator and implemented case split for \Sigma-types and records.&lt;/li&gt;
  &lt;li&gt;It is possible now to adjust the verbosity of pretty printer in error messages.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">We implemented a few features related to classes and pattern matching. One of these features is pattern matching on idp : a = a, which can be used instead of the J operator.</summary></entry><entry><title type="html">Arend 1.1.0 released</title><link href="https://arend-lang.github.io/2019/10/01/Arend-1.1.0-released.html" rel="alternate" type="text/html" title="Arend 1.1.0 released" /><published>2019-10-01T00:00:00+08:00</published><updated>2019-10-01T00:00:00+08:00</updated><id>https://arend-lang.github.io/2019/10/01/Arend-1.1.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2019/10/01/Arend-1.1.0-released.html">&lt;p&gt;Arend now has proof irrelevant universe of proposition and the plugin can run the typechecker automatically in background.&lt;/p&gt;

&lt;p&gt;Language updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/about/arend-features#the-universe-of-propositions&quot;&gt;\Prop&lt;/a&gt; is now proof irrelevant.
In particular, this means that we do not need &lt;span class=&quot;inl-highlight&quot;&gt;Path.inProp&lt;/span&gt; anymore.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/documentation/language-reference/definitions#infix-operators&quot;&gt;Right operator sections&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;New function and \case forms: &lt;a href=&quot;/documentation/language-reference/definitions/functions#sfunc&quot;&gt;\sfunc&lt;/a&gt; and &lt;a href=&quot;/documentation/language-reference/expressions/case#scase&quot;&gt;\scase&lt;/a&gt;.
It is necessary to use these forms for &lt;a href=&quot;/documentation/language-reference/definitions/level#squashed-data-types&quot;&gt;squashed data types&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Improved error messages.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plugin updates:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Implemented &lt;a href=&quot;/about/intellij-features#typechecking&quot;&gt;background typechecking&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Implemented &lt;a href=&quot;/about/intellij-features#pattern-generator&quot;&gt;pattern generator&lt;/a&gt; for missing clauses and case analysis.
Note that case analysis currently does not work for &lt;span class=&quot;inl-highlight&quot;&gt;&lt;span class=&quot;k&quot;&gt;\case&lt;/span&gt;&lt;/span&gt; expressions.&lt;/li&gt;
  &lt;li&gt;Improved &lt;a href=&quot;/about/intellij-features#class-hierarchy&quot;&gt;class hierarchy&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Added gutter icons for subclasses.&lt;/li&gt;
  &lt;li&gt;Improved module configuration dialog.&lt;/li&gt;
  &lt;li&gt;Fixed completion and inline renaming for infix and postfix notation.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Arend now has proof irrelevant universe of proposition and the plugin can run the typechecker automatically in background.</summary></entry><entry><title type="html">Arend 1.0.0 released</title><link href="https://arend-lang.github.io/2019/07/17/Arend-1.0.0-released.html" rel="alternate" type="text/html" title="Arend 1.0.0 released" /><published>2019-07-17T00:00:00+08:00</published><updated>2019-07-17T00:00:00+08:00</updated><id>https://arend-lang.github.io/2019/07/17/Arend-1.0.0-released</id><content type="html" xml:base="https://arend-lang.github.io/2019/07/17/Arend-1.0.0-released.html">&lt;p&gt;The first version of Arend is released!&lt;/p&gt;

&lt;p&gt;It implements the following features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/about/arend-features#path-types&quot;&gt;Path types&lt;/a&gt; based on the interval type.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/arend-features#higher-inductive-types&quot;&gt;Higher inductive types&lt;/a&gt;, including higher inductive-inductive types.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/arend-features#class-system&quot;&gt;Class system&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/arend-features#universe-polymorphism&quot;&gt;Universe polymorphism&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The IntelliJ Arend plugin implements the following features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Syntax highlighting&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#code-completion&quot;&gt;Code completion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#find-usages&quot;&gt;Find usages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#quick-documentation&quot;&gt;Quick documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#parameter-hints&quot;&gt;Parameter hints&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#class-hierarchy&quot;&gt;Class hierarchy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#code-formatter&quot;&gt;Code formatter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#auto-import&quot;&gt;Auto import&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;/about/intellij-features#implement-missing-fields&quot;&gt;Implement missing fields&lt;/a&gt;” quick fix&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#move-refactoring&quot;&gt;Move Refactoring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/about/intellij-features#typechecking&quot;&gt;Incremental typechecking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">The first version of Arend is released!</summary></entry></feed>